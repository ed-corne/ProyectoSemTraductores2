export const lrTable = {
    0: {
      tipo: 5,
      $: -2,
      programa: 1,
      Definiciones: 2,
      Definicion: 3,
      DefVar: 4,
      DefFunc: 6,
    },
    1: {
      $: 0,
    },
    2: {
      $: -1,
    },
    3: {
      tipo: 5,
      $: -2,
      Definiciones: 7,
      Definicion: 3,
      DefVar: 4,
      DefFunc: 6,
    },
    4: {
      tipo: -4,
      $: -4,
    },
    5: {
      identificador: 8,
    },
    6: {
      tipo: -5,
      $: -5,
    },
    7: {
      $: -3,
    },
    8: {
      ";": -7,
      coma: 10,
      "(": 11,
      ListaVar: 9,
    },
    9: {
      ";": 12,
    },
    10: {
      identificador: 13,
    },
    11: {
      tipo: 15,
      ")": -10,
      Parametros: 14,
    },
    12: {
      identificador: -6,
      tipo: -6,
      "}": -6,
      if: -6,
      while: -6,
      return: -6,
      $: -6,
    },
    13: {
      ";": -7,
      coma: 10,
      ListaVar: 16,
    },
    14: {
      ")": 17,
    },
    15: {
      identificador: 18,
    },
    16: {
      ";": -8,
    },
    17: {
      "{": 20,
      BloqFunc: 19,
    },
    18: {
      coma: 22,
      ")": -12,
      ListaParam: 21,
    },
    19: {
      tipo: -9,
      $: -9,
    },
    20: {
      identificador: 27,
      tipo: 5,
      "}": -15,
      if: 28,
      while: 29,
      return: 30,
      DefVar: 25,
      DefLocales: 23,
      DefLocal: 24,
      Sentencia: 26,
      LlamadaFunc: 31,
    },
    21: {
      ")": -11,
    },
    22: {
      tipo: 32,
    },
    23: {
      "}": 33,
    },
    24: {
      identificador: 27,
      tipo: 5,
      "}": -15,
      if: 28,
      while: 29,
      return: 30,
      DefVar: 25,
      DefLocales: 34,
      DefLocal: 24,
      Sentencia: 26,
      LlamadaFunc: 31,
    },
    25: {
      identificador: -17,
      tipo: -17,
      "}": -17,
      if: -17,
      while: -17,
      return: -17,
    },
    26: {
      identificador: -18,
      tipo: -18,
      "}": -18,
      if: -18,
      while: -18,
      return: -18,
    },
    27: {
      "(": 36,
      "=": 35,
    },
    28: {
      "(": 37,
    },
    29: {
      "(": 38,
    },
    30: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      ";": -29,
      "(": 41,
      ValorRegresa: 39,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 40,
    },
    31: {
      ";": 50,
    },
    32: {
      identificador: 51,
    },
    33: {
      tipo: -14,
      $: -14,
    },
    34: {
      "}": -16,
    },
    35: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 52,
    },
    36: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      ")": -31,
      Argumentos: 53,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 54,
    },
    37: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 55,
    },
    38: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 56,
    },
    39: {
      ";": 57,
    },
    40: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: 63,
      opAnd: 62,
      opIgualdad: 61,
      ";": -30,
    },
    41: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 64,
    },
    42: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 65,
    },
    43: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 66,
    },
    44: {
      opSuma: -52,
      opMul: -52,
      opRelac: -52,
      opOr: -52,
      opAnd: -52,
      opIgualdad: -52,
      ";": -52,
      coma: -52,
      ")": -52,
    },
    45: {
      opSuma: -35,
      opMul: -35,
      opRelac: -35,
      opOr: -35,
      opAnd: -35,
      opIgualdad: -35,
      ";": -35,
      coma: -35,
      ")": -35,
    },
    46: {
      opSuma: -36,
      opMul: -36,
      opRelac: -36,
      opOr: -36,
      opAnd: -36,
      opIgualdad: -36,
      ";": -36,
      coma: -36,
      "(": 36,
      ")": -36,
    },
    47: {
      opSuma: -37,
      opMul: -37,
      opRelac: -37,
      opOr: -37,
      opAnd: -37,
      opIgualdad: -37,
      ";": -37,
      coma: -37,
      ")": -37,
    },
    48: {
      opSuma: -38,
      opMul: -38,
      opRelac: -38,
      opOr: -38,
      opAnd: -38,
      opIgualdad: -38,
      ";": -38,
      coma: -38,
      ")": -38,
    },
    49: {
      opSuma: -39,
      opMul: -39,
      opRelac: -39,
      opOr: -39,
      opAnd: -39,
      opIgualdad: -39,
      ";": -39,
      coma: -39,
      ")": -39,
    },
    50: {
      identificador: -25,
      tipo: -25,
      "}": -25,
      if: -25,
      while: -25,
      return: -25,
      else: -25,
    },
    51: {
      coma: 22,
      ")": -12,
      ListaParam: 67,
    },
    52: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: 63,
      opAnd: 62,
      opIgualdad: 61,
      ";": 68,
    },
    53: {
      ")": 69,
    },
    54: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: 63,
      opAnd: 62,
      opIgualdad: 61,
      coma: 71,
      ")": -33,
      ListaArgumentos: 70,
    },
    55: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: 63,
      opAnd: 62,
      opIgualdad: 61,
      ")": 72,
    },
    56: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: 63,
      opAnd: 62,
      opIgualdad: 61,
      ")": 73,
    },
    57: {
      identificador: -24,
      tipo: -24,
      "}": -24,
      if: -24,
      while: -24,
      return: -24,
      else: -24,
    },
    58: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 74,
    },
    59: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 75,
    },
    60: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 76,
    },
    61: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 77,
    },
    62: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 78,
    },
    63: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 79,
    },
    64: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: 63,
      opAnd: 62,
      opIgualdad: 61,
      ")": 80,
    },
    65: {
      opSuma: -44,
      opMul: -44,
      opRelac: -44,
      opOr: -44,
      opAnd: -44,
      opIgualdad: -44,
      ";": -44,
      coma: -44,
      ")": -44,
    },
    66: {
      opSuma: -45,
      opMul: -45,
      opRelac: -45,
      opOr: -45,
      opAnd: -45,
      opIgualdad: -45,
      ";": -45,
      coma: -45,
      ")": -45,
    },
    67: {
      ")": -13,
    },
    68: {
      identificador: -21,
      tipo: -21,
      "}": -21,
      if: -21,
      while: -21,
      return: -21,
      else: -21,
    },
    69: {
      opSuma: -40,
      opMul: -40,
      opRelac: -40,
      opOr: -40,
      opAnd: -40,
      opIgualdad: -40,
      ";": -40,
      coma: -40,
      ")": -40,
    },
    70: {
      ")": -32,
    },
    71: {
      identificador: 46,
      entero: 47,
      real: 48,
      cadena: 49,
      opSuma: 42,
      opNot: 43,
      "(": 41,
      Termino: 44,
      LlamadaFunc: 45,
      Expresion: 81,
    },
    72: {
      identificador: 27,
      "{": 85,
      if: 28,
      while: 29,
      return: 30,
      Sentencia: 83,
      Bloque: 84,
      LlamadaFunc: 31,
      SentenciaBloque: 82,
    },
    73: {
      "{": 85,
      Bloque: 86,
    },
    74: {
      opSuma: -46,
      opMul: -46,
      opRelac: -46,
      opOr: -46,
      opAnd: -46,
      opIgualdad: -46,
      ";": -46,
      coma: -46,
      ")": -46,
    },
    75: {
      opSuma: -47,
      opMul: 58,
      opRelac: -47,
      opOr: -47,
      opAnd: -47,
      opIgualdad: -47,
      ";": -47,
      coma: -47,
      ")": -47,
    },
    76: {
      opSuma: 59,
      opMul: 58,
      opRelac: -48,
      opOr: -48,
      opAnd: -48,
      opIgualdad: -48,
      ";": -48,
      coma: -48,
      ")": -48,
    },
    77: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: -49,
      opAnd: -49,
      opIgualdad: -49,
      ";": -49,
      coma: -49,
      ")": -49,
    },
    78: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: -50,
      opAnd: -50,
      opIgualdad: 61,
      ";": -50,
      coma: -50,
      ")": -50,
    },
    79: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: -51,
      opAnd: 62,
      opIgualdad: 61,
      ";": -51,
      coma: -51,
      ")": -51,
    },
    80: {
      opSuma: -43,
      opMul: -43,
      opRelac: -43,
      opOr: -43,
      opAnd: -43,
      opIgualdad: -43,
      ";": -43,
      coma: -43,
      ")": -43,
    },
    81: {
      opSuma: 59,
      opMul: 58,
      opRelac: 60,
      opOr: 63,
      opAnd: 62,
      opIgualdad: 61,
      coma: 71,
      ")": -33,
      ListaArgumentos: 87,
    },
    82: {
      identificador: -26,
      tipo: -26,
      "}": -26,
      if: -26,
      while: -26,
      return: -26,
      else: 89,
      Otro: 88,
    },
    83: {
      identificador: -41,
      tipo: -41,
      "}": -41,
      if: -41,
      while: -41,
      return: -41,
      else: -41,
    },
    84: {
      identificador: -42,
      tipo: -42,
      "}": -42,
      if: -42,
      while: -42,
      return: -42,
      else: -42,
    },
    85: {
      identificador: 27,
      "}": -19,
      if: 28,
      while: 29,
      return: 30,
      Sentencias: 90,
      Sentencia: 91,
      LlamadaFunc: 31,
    },
    86: {
      identificador: -23,
      tipo: -23,
      "}": -23,
      if: -23,
      while: -23,
      return: -23,
      else: -23,
    },
    87: {
      ")": -34,
    },
    88: {
      identificador: -22,
      tipo: -22,
      "}": -22,
      if: -22,
      while: -22,
      return: -22,
      else: -22,
    },
    89: {
      identificador: 27,
      "{": 85,
      if: 28,
      while: 29,
      return: 30,
      Sentencia: 83,
      Bloque: 84,
      LlamadaFunc: 31,
      SentenciaBloque: 92,
    },
    90: {
      "}": 93,
    },
    91: {
      identificador: 27,
      "}": -19,
      if: 28,
      while: 29,
      return: 30,
      Sentencias: 94,
      Sentencia: 91,
      LlamadaFunc: 31,
    },
    92: {
      identificador: -27,
      tipo: -27,
      "}": -27,
      if: -27,
      while: -27,
      return: -27,
    },
    93: {
      identificador: -28,
      tipo: -28,
      "}": -28,
      if: -28,
      while: -28,
      return: -28,
      else: -28,
    },
    94: {
      "}": -20,
    },
  };
  